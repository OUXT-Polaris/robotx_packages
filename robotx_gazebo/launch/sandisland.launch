<?xml version="1.0"?>

<launch>

  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find robotx_gazebo)/config/custom_rosconsole.conf"/>

  <!-- For setting debug level to debug -->
  <!--<env name="ROSCONSOLE_CONFIG_FILE"
       value="$(find kingfisher_gazebo)/config/custom_rosconsole.conf"/>
   -->
  <!-- Command line arguments -->

  <arg name="world" default="sandisland_buoys.world" />

  <arg name="name" default="WAMV" />
  <arg name="imu" default="true" />
  <arg name="gps" default="true" />
  <arg name="p3d" default="true" />

  <arg name="microstrain" default="false" />

  <!-- Initial USV location and attitude-->
  <arg name="x" default="-45" />
  <arg name="y" default="-10" />
  <arg name="z" default="0.1" />
  <arg name="P" default="0" />
  <arg name="R" default="0" />
  <arg name="Y" default="1.57079632679" />


  <param name="use_sim_time" value="true" />
  <!-- Start Gazebo with the world file -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find robotx_gazebo)/worlds/$(arg world)"/>
    <arg name="verbose" value="true"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
  </include>

  <!-- Load robot model -->
  <arg name="urdf" default="$(find wamv_description)/urdf/wamv_robotx.xacro"/>
  <!--<arg name="urdf" default="$(find nps_robotx)/urdf/nps_wamv.xacro"/> -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg urdf)"/>

  <!-- Spawn model in Gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
	args="-x $(arg x) -y $(arg y) -z $(arg z)
	      -R $(arg R) -P $(arg P) -Y $(arg Y)
	      -urdf -param robot_description -model wamv"/>

  <!--<include file="$(find robotx_gazebo)/launch/usv_diffdrive.launch"/>-->

  <!-- Utility for publishing rpy for plotting -->
  <!--
  <node pkg="robotx_gazebo" type="quat2rpy.py" name="quat2rpy" output="screen">
      <remap from="in_topic" to="/gazebo/model_states" />
      <remap from="out_topic" to="wamv_rpy" />
      <param name="input_msg_type" value="ModelStates" />
      <param name="modelstates_index" value="6" type="int" />
  </node>
  -->

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
  </node>

  <!-- Joint Controller -->
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find robotx_gazebo)/config/joint_control.yaml" command="load"/>
  <!-- load the controllers -->
  <node name="wamv_controller_spawner" pkg="controller_manager"
		type="spawner" output="screen"
		args="joint_state_controller
			  left_thruster_position_controller
              right_thruster_position_controller"/>    
</launch>
